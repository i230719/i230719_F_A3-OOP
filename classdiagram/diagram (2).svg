<svg id="SVGID" width="100%" xmlns="http://www.w3.org/2000/svg" style="max-width: 100%; width: 100%; height: 100%; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%);" viewBox="0 0 2807.84619140625 1965.39990234375" role="graphics-document document" aria-roledescription="classDiagram" preserveAspectRatio="xMidYMid meet"><style>#SVGID{font-family:"trebuchet ms",verdana,arial,sans-serif;font-size:16px;fill:#000000;}#SVGID .error-icon{fill:#552222;}#SVGID .error-text{fill:#552222;stroke:#552222;}#SVGID .edge-thickness-normal{stroke-width:2px;}#SVGID .edge-thickness-thick{stroke-width:3.5px;}#SVGID .edge-pattern-solid{stroke-dasharray:0;}#SVGID .edge-pattern-dashed{stroke-dasharray:3;}#SVGID .edge-pattern-dotted{stroke-dasharray:2;}#SVGID .marker{fill:#666;stroke:#666;}#SVGID .marker.cross{stroke:#666;}#SVGID svg{font-family:"trebuchet ms",verdana,arial,sans-serif;font-size:16px;}#SVGID g.classGroup text{fill:#999;stroke:none;font-family:"trebuchet ms",verdana,arial,sans-serif;font-size:10px;}#SVGID g.classGroup text .title{font-weight:bolder;}#SVGID .nodeLabel,#SVGID .edgeLabel{color:#111111;}#SVGID .edgeLabel .label rect{fill:#eee;}#SVGID .label text{fill:#111111;}#SVGID .edgeLabel .label span{background:#eee;}#SVGID .classTitle{font-weight:bolder;}#SVGID .node rect,#SVGID .node circle,#SVGID .node ellipse,#SVGID .node polygon,#SVGID .node path{fill:#eee;stroke:#999;stroke-width:1px;}#SVGID .divider{stroke:#999;stroke-width:1;}#SVGID g.clickable{cursor:pointer;}#SVGID g.classGroup rect{fill:#eee;stroke:#999;}#SVGID g.classGroup line{stroke:#999;stroke-width:1;}#SVGID .classLabel .box{stroke:none;stroke-width:0;fill:#eee;opacity:0.5;}#SVGID .classLabel .label{fill:#999;font-size:10px;}#SVGID .relation{stroke:#666;stroke-width:1;fill:none;}#SVGID .dashed-line{stroke-dasharray:3;}#SVGID .dotted-line{stroke-dasharray:1 2;}#SVGID #compositionStart,#SVGID .composition{fill:#666!important;stroke:#666!important;stroke-width:1;}#SVGID #compositionEnd,#SVGID .composition{fill:#666!important;stroke:#666!important;stroke-width:1;}#SVGID #dependencyStart,#SVGID .dependency{fill:#666!important;stroke:#666!important;stroke-width:1;}#SVGID #dependencyStart,#SVGID .dependency{fill:#666!important;stroke:#666!important;stroke-width:1;}#SVGID #extensionStart,#SVGID .extension{fill:transparent!important;stroke:#666!important;stroke-width:1;}#SVGID #extensionEnd,#SVGID .extension{fill:transparent!important;stroke:#666!important;stroke-width:1;}#SVGID #aggregationStart,#SVGID .aggregation{fill:transparent!important;stroke:#666!important;stroke-width:1;}#SVGID #aggregationEnd,#SVGID .aggregation{fill:transparent!important;stroke:#666!important;stroke-width:1;}#SVGID #lollipopStart,#SVGID .lollipop{fill:#eee!important;stroke:#666!important;stroke-width:1;}#SVGID #lollipopEnd,#SVGID .lollipop{fill:#eee!important;stroke:#666!important;stroke-width:1;}#SVGID .edgeTerminals{font-size:11px;line-height:initial;}#SVGID .classTitleText{text-anchor:middle;font-size:18px;fill:#000000;}#SVGID :root{--mermaid-font-family:"trebuchet ms",verdana,arial,sans-serif;}</style><g><defs><marker id="SVGID_classDiagram-aggregationStart" class="marker aggregation classDiagram" refX="18" refY="7" markerWidth="190" markerHeight="240" orient="auto"><path d="M 18,7 L9,13 L1,7 L9,1 Z"/></marker></defs><defs><marker id="SVGID_classDiagram-aggregationEnd" class="marker aggregation classDiagram" refX="1" refY="7" markerWidth="20" markerHeight="28" orient="auto"><path d="M 18,7 L9,13 L1,7 L9,1 Z"/></marker></defs><defs><marker id="SVGID_classDiagram-extensionStart" class="marker extension classDiagram" refX="18" refY="7" markerWidth="190" markerHeight="240" orient="auto"><path d="M 1,7 L18,13 V 1 Z"/></marker></defs><defs><marker id="SVGID_classDiagram-extensionEnd" class="marker extension classDiagram" refX="1" refY="7" markerWidth="20" markerHeight="28" orient="auto"><path d="M 1,1 V 13 L18,7 Z"/></marker></defs><defs><marker id="SVGID_classDiagram-compositionStart" class="marker composition classDiagram" refX="18" refY="7" markerWidth="190" markerHeight="240" orient="auto"><path d="M 18,7 L9,13 L1,7 L9,1 Z"/></marker></defs><defs><marker id="SVGID_classDiagram-compositionEnd" class="marker composition classDiagram" refX="1" refY="7" markerWidth="20" markerHeight="28" orient="auto"><path d="M 18,7 L9,13 L1,7 L9,1 Z"/></marker></defs><defs><marker id="SVGID_classDiagram-dependencyStart" class="marker dependency classDiagram" refX="6" refY="7" markerWidth="190" markerHeight="240" orient="auto"><path d="M 5,7 L9,13 L1,7 L9,1 Z"/></marker></defs><defs><marker id="SVGID_classDiagram-dependencyEnd" class="marker dependency classDiagram" refX="13" refY="7" markerWidth="20" markerHeight="28" orient="auto"><path d="M 18,7 L9,13 L14,7 L9,1 Z"/></marker></defs><defs><marker id="SVGID_classDiagram-lollipopStart" class="marker lollipop classDiagram" refX="13" refY="7" markerWidth="190" markerHeight="240" orient="auto"><circle stroke="black" fill="transparent" cx="7" cy="7" r="6"/></marker></defs><defs><marker id="SVGID_classDiagram-lollipopEnd" class="marker lollipop classDiagram" refX="1" refY="7" markerWidth="190" markerHeight="240" orient="auto"><circle stroke="black" fill="transparent" cx="7" cy="7" r="6"/></marker></defs><g class="root"><g class="clusters"/><g class="edgePaths"><path d="M2318.076,1434.465L2306.928,1446.621C2295.779,1458.777,2273.481,1483.089,2262.332,1500.944C2251.184,1518.8,2251.184,1530.2,2251.184,1535.9L2251.184,1541.6" id="id_CPU_ALU_1" class="  edge-pattern-solid relation" style="fill:none" marker-start="url(#SVGID_classDiagram-compositionStart)"/><path d="M2566.747,1434.465L2577.896,1446.621C2589.045,1458.777,2611.342,1483.089,2622.491,1519.611C2633.64,1556.133,2633.64,1604.867,2633.64,1629.233L2633.64,1653.6" id="id_CPU_ControlUnit_2" class="  edge-pattern-solid relation" style="fill:none" marker-start="url(#SVGID_classDiagram-compositionStart)"/><path d="M1622.976,1487.962L1620.715,1491.201C1618.455,1494.441,1613.933,1500.921,1611.673,1522.927C1609.412,1544.933,1609.412,1582.467,1609.412,1601.233L1609.412,1620" id="id_MotherBoard_MainMemory_3" class="  edge-pattern-solid relation" style="fill:none" marker-start="url(#SVGID_classDiagram-compositionStart)"/><path d="M1911.637,1487.029L1914.466,1490.424C1917.294,1493.82,1922.951,1500.61,1925.78,1522.772C1928.609,1544.933,1928.609,1582.467,1928.609,1601.233L1928.609,1620" id="id_MotherBoard_Port_4" class="  edge-pattern-solid relation" style="fill:none" marker-start="url(#SVGID_classDiagram-compositionStart)"/><path d="M2143.729,1073.05L2142.643,1075.942C2141.557,1078.834,2139.384,1084.617,2138.298,1106.275C2137.212,1127.933,2137.212,1165.467,2137.212,1184.233L2137.212,1203" id="id_Computer_PhysicalMemory_5" class="  edge-pattern-solid relation" style="fill:none" marker-start="url(#SVGID_classDiagram-aggregationStart)"/><path d="M1975.631,994.985L1938.842,1010.887C1902.054,1026.79,1828.476,1058.595,1791.688,1080.197C1754.899,1101.8,1754.899,1113.2,1754.899,1118.9L1754.899,1124.6" id="id_Computer_MotherBoard_6" class="  edge-pattern-solid relation" style="fill:none" marker-start="url(#SVGID_classDiagram-aggregationStart)"/><path d="M2416.045,1067.888L2420.439,1071.64C2424.834,1075.392,2433.623,1082.896,2438.017,1099.815C2442.412,1116.733,2442.412,1143.067,2442.412,1156.233L2442.412,1169.4" id="id_Computer_CPU_7" class="  edge-pattern-solid relation" style="fill:none" marker-start="url(#SVGID_classDiagram-aggregationStart)"/><path d="M2211.328,583.2L2211.328,601.967C2211.328,620.733,2211.328,658.267,2211.328,679.733C2211.328,701.2,2211.328,706.6,2211.328,709.3L2211.328,712" id="id_ComputerAssembly_Computer_8" class="  edge-pattern-solid relation" style="fill:none" marker-end="url(#SVGID_classDiagram-extensionEnd)"/><path d="M1195.468,140.714L1352.161,163.728C1508.855,186.743,1822.242,232.771,1984.725,271.732C2147.208,310.694,2158.788,342.587,2164.578,358.534L2170.367,374.481" id="id_PCAssembly_ComputerAssembly_9" class="  edge-pattern-solid relation" style="fill:none" marker-end="url(#SVGID_classDiagram-extensionEnd)"/><path d="M1453.605,142.779L1596.774,165.449C1739.942,188.119,2026.279,233.46,2161.642,272.198C2297.005,310.936,2281.393,343.073,2273.587,359.141L2265.781,375.209" id="id_MACAssembly_ComputerAssembly_10" class="  edge-pattern-solid relation" style="fill:none" marker-end="url(#SVGID_classDiagram-extensionEnd)"/><path d="M1213.103,149.964L1318.157,171.436C1423.211,192.909,1633.319,235.855,1742.518,270.494C1851.718,305.133,1860.009,331.467,1864.154,344.633L1868.3,357.8" id="id_PCAssembly_Case_11" class="  edge-pattern-solid relation" style="fill:none" marker-start="url(#SVGID_classDiagram-aggregationStart)"/><path d="M981.443,145.83L849.94,167.992C718.437,190.153,455.431,234.477,323.928,262.338C192.425,290.2,192.425,301.6,192.425,307.3L192.425,313" id="id_PCAssembly_GraphicsCard_12" class="  edge-pattern-solid relation" style="fill:none" marker-start="url(#SVGID_classDiagram-aggregationStart)"/><path d="M981.739,155.441L900.187,176.001C818.635,196.561,655.532,237.68,577.312,265.807C499.093,293.933,505.758,309.067,509.091,316.633L512.423,324.2" id="id_PCAssembly_StorageDevice_13" class="  edge-pattern-solid relation" style="fill:none" marker-start="url(#SVGID_classDiagram-aggregationStart)"/><path d="M984.21,201.615L964.889,214.479C945.567,227.343,906.924,253.072,889.676,271.636C872.428,290.2,876.576,301.6,878.649,307.3L880.723,313" id="id_PCAssembly_NetworkCard_14" class="  edge-pattern-solid relation" style="fill:none" marker-start="url(#SVGID_classDiagram-aggregationStart)"/><path d="M1207.019,257.395L1210.004,260.963C1212.989,264.53,1218.958,271.665,1224.579,282.799C1230.199,293.933,1235.47,309.067,1238.106,316.633L1240.741,324.2" id="id_PCAssembly_PowerSupply_15" class="  edge-pattern-solid relation" style="fill:none" marker-start="url(#SVGID_classDiagram-aggregationStart)"/><path d="M1212.533,164.965L1269.061,183.937C1325.59,202.91,1438.647,240.855,1501.842,278.594C1565.037,316.333,1578.368,353.867,1585.034,372.633L1591.7,391.4" id="id_PCAssembly_Battery_16" class="  edge-pattern-solid relation" style="fill:none" marker-start="url(#SVGID_classDiagram-aggregationStart)"/><path d="M1471.173,153.452L1564.761,174.344C1658.349,195.235,1845.525,237.017,1931.306,271.075C2017.087,305.133,2001.473,331.467,1993.666,344.633L1985.859,357.8" id="id_MACAssembly_Case_17" class="  edge-pattern-solid relation" style="fill:none" marker-start="url(#SVGID_classDiagram-aggregationStart)"/><path d="M1227.69,145.632L1087.799,167.826C947.907,190.021,668.124,234.411,522.876,262.305C377.629,290.2,366.917,301.6,361.561,307.3L356.205,313" id="id_MACAssembly_GraphicsCard_18" class="  edge-pattern-solid relation" style="fill:none" marker-start="url(#SVGID_classDiagram-aggregationStart)"/><path d="M1228.049,157.951L1150.74,178.093C1073.431,198.234,918.812,238.517,834.973,266.225C751.134,293.933,738.073,309.067,731.543,316.633L725.013,324.2" id="id_MACAssembly_StorageDevice_19" class="  edge-pattern-solid relation" style="fill:none" marker-start="url(#SVGID_classDiagram-aggregationStart)"/><path d="M1230.492,205.682L1212.217,217.868C1193.942,230.055,1157.391,254.427,1134.285,272.314C1111.179,290.2,1101.517,301.6,1096.686,307.3L1091.855,313" id="id_MACAssembly_NetworkCard_20" class="  edge-pattern-solid relation" style="fill:none" marker-start="url(#SVGID_classDiagram-aggregationStart)"/><path d="M1435.358,259.739L1437.401,262.916C1439.445,266.093,1443.531,272.446,1440.128,283.19C1436.725,293.933,1425.833,309.067,1420.387,316.633L1414.941,324.2" id="id_MACAssembly_PowerSupply_21" class="  edge-pattern-solid relation" style="fill:none" marker-start="url(#SVGID_classDiagram-aggregationStart)"/><path d="M1470.368,173.572L1515.197,191.11C1560.025,208.648,1649.682,243.724,1684.288,280.029C1718.894,316.333,1698.448,353.867,1688.226,372.633L1678.003,391.4" id="id_MACAssembly_Battery_22" class="  edge-pattern-solid relation" style="fill:none" marker-start="url(#SVGID_classDiagram-aggregationStart)"/></g><g class="edgeLabels"><g class="edgeLabel" transform="translate(2251.183603286743, 1507.400029182434)"><g class="label" transform="translate(-43.28125, -9.199999809265137)"><rect rx="0" ry="0" width="86.68399810791016" height="17.743146896362305"/><text style=""><tspan xml:space="preserve" dy="1em" x="0" class="row">composition</tspan></text></g></g><g class="edgeLabel" transform="translate(2633.639856338501, 1507.400029182434)"><g class="label" transform="translate(-43.28125, -9.199999809265137)"><rect rx="0" ry="0" width="86.68399810791016" height="17.743146896362305"/><text style=""><tspan xml:space="preserve" dy="1em" x="0" class="row">composition</tspan></text></g></g><g class="edgeLabel" transform="translate(1609.4121265411377, 1507.400029182434)"><g class="label" transform="translate(-43.28125, -9.199999809265137)"><rect rx="0" ry="0" width="86.68399810791016" height="17.743146896362305"/><text style=""><tspan xml:space="preserve" dy="1em" x="0" class="row">composition</tspan></text></g></g><g class="edgeLabel" transform="translate(1928.608606338501, 1507.400029182434)"><g class="label" transform="translate(-43.28125, -9.199999809265137)"><rect rx="0" ry="0" width="86.68399810791016" height="17.743146896362305"/><text style=""><tspan xml:space="preserve" dy="1em" x="0" class="row">composition</tspan></text></g></g><g class="edgeLabel" transform="translate(2137.21173286438, 1090.4000234603882)"><g class="label" transform="translate(-42.04375076293945, -9.199999809265137)"><rect rx="0" ry="0" width="84.20771026611328" height="17.743146896362305"/><text style=""><tspan xml:space="preserve" dy="1em" x="0" class="row">aggregation</tspan></text></g></g><g class="edgeLabel" transform="translate(1754.8992328643799, 1090.4000234603882)"><g class="label" transform="translate(-42.04375076293945, -9.199999809265137)"><rect rx="0" ry="0" width="84.20771026611328" height="17.743146896362305"/><text style=""><tspan xml:space="preserve" dy="1em" x="0" class="row">aggregation</tspan></text></g></g><g class="edgeLabel" transform="translate(2442.411729812622, 1090.4000234603882)"><g class="label" transform="translate(-42.04375076293945, -9.199999809265137)"><rect rx="0" ry="0" width="84.20771026611328" height="17.743146896362305"/><text style=""><tspan xml:space="preserve" dy="1em" x="0" class="row">aggregation</tspan></text></g></g><g class="edgeLabel" transform="translate(2211.3281326293945, 695.8000116348267)"><g class="label" transform="translate(-40.884376525878906, -9.199999809265137)"><rect rx="0" ry="0" width="81.83296966552734" height="17.743146896362305"/><text style=""><tspan xml:space="preserve" dy="1em" x="0" class="row">inheritance</tspan></text></g></g><g class="edgeLabel" transform="translate(2135.628915786743, 278.80000591278076)"><g class="label" transform="translate(-40.884376525878906, -9.199999809265137)"><rect rx="0" ry="0" width="81.83296966552734" height="17.743146896362305"/><text style=""><tspan xml:space="preserve" dy="1em" x="0" class="row">inheritance</tspan></text></g></g><g class="edgeLabel" transform="translate(2312.616418838501, 278.80000591278076)"><g class="label" transform="translate(-40.884376525878906, -9.199999809265137)"><rect rx="0" ry="0" width="81.83296966552734" height="17.743146896362305"/><text style=""><tspan xml:space="preserve" dy="1em" x="0" class="row">inheritance</tspan></text></g></g><g class="edgeLabel" transform="translate(1843.426570892334, 278.80000591278076)"><g class="label" transform="translate(-42.04375076293945, -9.199999809265137)"><rect rx="0" ry="0" width="84.20771026611328" height="17.743146896362305"/><text style=""><tspan xml:space="preserve" dy="1em" x="0" class="row">aggregation</tspan></text></g></g><g class="edgeLabel" transform="translate(192.4250030517578, 278.80000591278076)"><g class="label" transform="translate(-42.04375076293945, -9.199999809265137)"><rect rx="0" ry="0" width="84.20771026611328" height="17.743146896362305"/><text style=""><tspan xml:space="preserve" dy="1em" x="0" class="row">aggregation</tspan></text></g></g><g class="edgeLabel" transform="translate(492.4281311035156, 278.80000591278076)"><g class="label" transform="translate(-42.04375076293945, -9.199999809265137)"><rect rx="0" ry="0" width="84.20771026611328" height="17.743146896362305"/><text style=""><tspan xml:space="preserve" dy="1em" x="0" class="row">aggregation</tspan></text></g></g><g class="edgeLabel" transform="translate(868.2812576293945, 278.80000591278076)"><g class="label" transform="translate(-42.04375076293945, -9.199999809265137)"><rect rx="0" ry="0" width="84.20771026611328" height="17.743146896362305"/><text style=""><tspan xml:space="preserve" dy="1em" x="0" class="row">aggregation</tspan></text></g></g><g class="edgeLabel" transform="translate(1224.9281311035156, 278.80000591278076)"><g class="label" transform="translate(-42.04375076293945, -9.199999809265137)"><rect rx="0" ry="0" width="84.20771026611328" height="17.743146896362305"/><text style=""><tspan xml:space="preserve" dy="1em" x="0" class="row">aggregation</tspan></text></g></g><g class="edgeLabel" transform="translate(1551.7046928405762, 278.80000591278076)"><g class="label" transform="translate(-42.04375076293945, -9.199999809265137)"><rect rx="0" ry="0" width="84.20771026611328" height="17.743146896362305"/><text style=""><tspan xml:space="preserve" dy="1em" x="0" class="row">aggregation</tspan></text></g></g><g class="edgeLabel" transform="translate(2032.7007884979248, 278.80000591278076)"><g class="label" transform="translate(-42.04375076293945, -9.199999809265137)"><rect rx="0" ry="0" width="84.20771026611328" height="17.743146896362305"/><text style=""><tspan xml:space="preserve" dy="1em" x="0" class="row">aggregation</tspan></text></g></g><g class="edgeLabel" transform="translate(388.3406295776367, 278.80000591278076)"><g class="label" transform="translate(-42.04375076293945, -9.199999809265137)"><rect rx="0" ry="0" width="84.20771026611328" height="17.743146896362305"/><text style=""><tspan xml:space="preserve" dy="1em" x="0" class="row">aggregation</tspan></text></g></g><g class="edgeLabel" transform="translate(764.1937561035156, 278.80000591278076)"><g class="label" transform="translate(-42.04375076293945, -9.199999809265137)"><rect rx="0" ry="0" width="84.20771026611328" height="17.743146896362305"/><text style=""><tspan xml:space="preserve" dy="1em" x="0" class="row">aggregation</tspan></text></g></g><g class="edgeLabel" transform="translate(1120.8406295776367, 278.80000591278076)"><g class="label" transform="translate(-42.04375076293945, -9.199999809265137)"><rect rx="0" ry="0" width="84.20771026611328" height="17.743146896362305"/><text style=""><tspan xml:space="preserve" dy="1em" x="0" class="row">aggregation</tspan></text></g></g><g class="edgeLabel" transform="translate(1447.6171913146973, 278.80000591278076)"><g class="label" transform="translate(-42.04375076293945, -9.199999809265137)"><rect rx="0" ry="0" width="84.20771026611328" height="17.743146896362305"/><text style=""><tspan xml:space="preserve" dy="1em" x="0" class="row">aggregation</tspan></text></g></g><g class="edgeLabel" transform="translate(1739.339069366455, 278.80000591278076)"><g class="label" transform="translate(-42.04375076293945, -9.199999809265137)"><rect rx="0" ry="0" width="84.20771026611328" height="17.743146896362305"/><text style=""><tspan xml:space="preserve" dy="1em" x="0" class="row">aggregation</tspan></text></g></g></g><g class="nodes"><g class="node default" id="classId-ALU-3230" data-node="true" data-id="ALU" transform="translate(2251.183603286743, 1749.5000228881836)"><rect style="" class="outer title-state" x="-166.25" y="-207.89999675750732" width="332.5" height="415.79999351501465"/><line class="divider" x1="-166.25" x2="166.25" y1="-177.49999713897705" y2="-177.49999713897705"/><line class="divider" x1="-166.25" x2="166.25" y1="-71.89999866485596" y2="-71.89999866485596"/><g class="label"><text style=""><tspan xml:space="preserve" dy="1em" x="0" class="title-row"/></text><text style="" class="classTitle" transform="translate( -15.3125, -200.39999675750732)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">ALU</tspan></text><text style="" transform="translate( -158.75, -165.99999713897705)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-int NoOfAdders</tspan></text><text style="" transform="translate( -158.75, -143.59999752044678)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-int NoOfSubtractor</tspan></text><text style="" transform="translate( -158.75, -121.1999979019165)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-int NoOfRegisters</tspan></text><text style="" transform="translate( -158.75, -98.79999828338623)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-int sizeOfRegisters</tspan></text><text style="" transform="translate( -158.75, -64.39999866485596)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+ALU()</tspan></text><text style="" transform="translate( -158.75, -41.999999046325684)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+ALU(int a = 0, int s = 0, int r = 0, int sr = 0)</tspan></text><text style="" transform="translate( -158.75, -19.59999942779541)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+ALU&amp; ALU(ALU&amp; alu)</tspan></text><text style="" transform="translate( -158.75, 2.8000001907348633)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+void operator=(ALU&amp; alu)</tspan></text><text style="" transform="translate( -158.75, 25.199999809265137)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+void set_NoOfAdders(int n)</tspan></text><text style="" transform="translate( -158.75, 47.59999942779541)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+void set_NoOfSubtractor(int n)</tspan></text><text style="" transform="translate( -158.75, 69.99999904632568)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+void set_NoOfRegisters(int n)</tspan></text><text style="" transform="translate( -158.75, 92.39999866485596)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+void set_sizeOfRegisters(int n)</tspan></text><text style="" transform="translate( -158.75, 114.79999828338623)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+int get_NoOfAdders() : const</tspan></text><text style="" transform="translate( -158.75, 137.1999979019165)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+int get_NoOfSubtractor() : const</tspan></text><text style="" transform="translate( -158.75, 159.59999752044678)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+int get_NoOfRegisters() : const</tspan></text><text style="" transform="translate( -158.75, 181.99999713897705)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+int get_sizeOfRegisters() : const</tspan></text></g></g><g class="node default" id="classId-ControlUnit-3231" data-node="true" data-id="ControlUnit" transform="translate(2633.639856338501, 1749.5000228881836)"><rect style="" class="outer title-state" x="-166.2062530517578" y="-95.89999866485596" width="332.4125061035156" height="191.7999973297119"/><line class="divider" x1="-166.2062530517578" x2="166.2062530517578" y1="-65.49999904632568" y2="-65.49999904632568"/><line class="divider" x1="-166.2062530517578" x2="166.2062530517578" y1="-27.09999942779541" y2="-27.09999942779541"/><g class="label"><text style=""><tspan xml:space="preserve" dy="1em" x="0" class="title-row"/></text><text style="" class="classTitle" transform="translate( -43.35234451293945, -88.39999866485596)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">ControlUnit</tspan></text><text style="" transform="translate( -158.7062530517578, -53.999999046325684)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-float clock</tspan></text><text style="" transform="translate( -158.7062530517578, -19.59999942779541)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+ControlUnit()</tspan></text><text style="" transform="translate( -158.7062530517578, 2.8000001907348633)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+ControlUnit(float c)</tspan></text><text style="" transform="translate( -158.7062530517578, 25.199999809265137)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+ControlUnit&amp; ControlUnit(ControlUnit&amp; cu)</tspan></text><text style="" transform="translate( -158.7062530517578, 47.59999942779541)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+float getClock() : const</tspan></text><text style="" transform="translate( -158.7062530517578, 69.99999904632568)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+void setClock(float c)</tspan></text></g></g><g class="node default" id="classId-CPU-3232" data-node="true" data-id="CPU" transform="translate(2442.411729812622, 1298.9000263214111)"><rect style="" class="outer title-state" x="-112.16875457763672" y="-129.49999809265137" width="224.33750915527344" height="258.99999618530273"/><line class="divider" x1="-112.16875457763672" x2="112.16875457763672" y1="-99.0999984741211" y2="-99.0999984741211"/><line class="divider" x1="-112.16875457763672" x2="112.16875457763672" y1="-38.29999923706055" y2="-38.29999923706055"/><g class="label"><text style=""><tspan xml:space="preserve" dy="1em" x="0" class="title-row"/></text><text style="" class="classTitle" transform="translate( -15.012499809265137, -121.99999809265137)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">CPU</tspan></text><text style="" transform="translate( -104.66875457763672, -87.5999984741211)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-ALU alu</tspan></text><text style="" transform="translate( -104.66875457763672, -65.19999885559082)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-ControlUnit cu</tspan></text><text style="" transform="translate( -104.66875457763672, -30.799999237060547)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+CPU()</tspan></text><text style="" transform="translate( -104.66875457763672, -8.399999618530273)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+CPU(ALU&amp;a, ControlUnit&amp;c)</tspan></text><text style="" transform="translate( -104.66875457763672, 14)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+void operator=(CPU&amp; c)</tspan></text><text style="" transform="translate( -104.66875457763672, 36.39999961853027)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+ALU&amp; getALU()</tspan></text><text style="" transform="translate( -104.66875457763672, 58.79999923706055)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+ControlUnit&amp; getCU()</tspan></text><text style="" transform="translate( -104.66875457763672, 81.19999885559082)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+void setALU(ALU&amp; a)</tspan></text><text style="" transform="translate( -104.66875457763672, 103.5999984741211)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+void setCU(ControlUnit&amp; c)</tspan></text></g></g><g class="node default" id="classId-GraphicsCard-3233" data-node="true" data-id="GraphicsCard" transform="translate(192.4250030517578, 487.3000087738037)"><rect style="" class="outer title-state" x="-184.4250030517578" y="-174.2999973297119" width="368.8500061035156" height="348.5999946594238"/><line class="divider" x1="-184.4250030517578" x2="184.4250030517578" y1="-143.89999771118164" y2="-143.89999771118164"/><line class="divider" x1="-184.4250030517578" x2="184.4250030517578" y1="-60.69999885559082" y2="-60.69999885559082"/><g class="label"><text style=""><tspan xml:space="preserve" dy="1em" x="0" class="title-row"/></text><text style="" class="classTitle" transform="translate( -49.35000228881836, -166.7999973297119)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">GraphicsCard</tspan></text><text style="" transform="translate( -176.9250030517578, -132.39999771118164)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-string brand</tspan></text><text style="" transform="translate( -176.9250030517578, -109.99999809265137)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-int memorySize</tspan></text><text style="" transform="translate( -176.9250030517578, -87.5999984741211)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-double price</tspan></text><text style="" transform="translate( -176.9250030517578, -53.19999885559082)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+GraphicsCard()</tspan></text><text style="" transform="translate( -176.9250030517578, -30.799999237060547)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+GraphicsCard(string str, int mm, double p)</tspan></text><text style="" transform="translate( -176.9250030517578, -8.399999618530273)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+GraphicsCard&amp; GraphicsCard(GraphicsCard&amp; gc)</tspan></text><text style="" transform="translate( -176.9250030517578, 14)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+void operator=(GraphicsCard&amp; gc)</tspan></text><text style="" transform="translate( -176.9250030517578, 36.39999961853027)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+string getBrand() : const</tspan></text><text style="" transform="translate( -176.9250030517578, 58.79999923706055)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+int getMemorySize() : const</tspan></text><text style="" transform="translate( -176.9250030517578, 81.19999885559082)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+double getPrice() : const</tspan></text><text style="" transform="translate( -176.9250030517578, 103.5999984741211)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+void setBrand(string str)</tspan></text><text style="" transform="translate( -176.9250030517578, 125.99999809265137)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+void setMemorySize(int n)</tspan></text><text style="" transform="translate( -176.9250030517578, 148.39999771118164)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+void setPrice(double p)</tspan></text></g></g><g class="node default" id="classId-Computer-3234" data-node="true" data-id="Computer" transform="translate(2211.3281326293945, 893.1000175476074)"><rect style="" class="outer title-state" x="-219.1750030517578" y="-163.09999752044678" width="438.3500061035156" height="326.19999504089355"/><line class="divider" x1="-219.1750030517578" x2="219.1750030517578" y1="-132.6999979019165" y2="-132.6999979019165"/><line class="divider" x1="-219.1750030517578" x2="219.1750030517578" y1="-49.499999046325684" y2="-49.499999046325684"/><g class="label"><text style=""><tspan xml:space="preserve" dy="1em" x="0" class="title-row"/></text><text style="" class="classTitle" transform="translate( -37.05312728881836, -155.59999752044678)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">Computer</tspan></text><text style="" transform="translate( -211.6750030517578, -121.1999979019165)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-PhysicalMemory pm</tspan></text><text style="" transform="translate( -211.6750030517578, -98.79999828338623)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-MotherBoard mb</tspan></text><text style="" transform="translate( -211.6750030517578, -76.39999866485596)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-CPU cpu</tspan></text><text style="" transform="translate( -211.6750030517578, -41.999999046325684)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+Computer()</tspan></text><text style="" transform="translate( -211.6750030517578, -19.59999942779541)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+Computer(PhysicalMemory&amp; p, MotherBoard&amp; m, CPU&amp; c)</tspan></text><text style="" transform="translate( -211.6750030517578, 2.8000001907348633)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+Computer(Computer&amp; comp)</tspan></text><text style="" transform="translate( -211.6750030517578, 25.199999809265137)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+PhysicalMemory&amp; getPM()</tspan></text><text style="" transform="translate( -211.6750030517578, 47.59999942779541)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+MotherBoard&amp; getMB()</tspan></text><text style="" transform="translate( -211.6750030517578, 69.99999904632568)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+CPU&amp; getCPU()</tspan></text><text style="" transform="translate( -211.6750030517578, 92.39999866485596)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+void setPM(PhysicalMemory&amp; p)</tspan></text><text style="" transform="translate( -211.6750030517578, 114.79999828338623)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+void setMB(MotherBoard&amp; m)</tspan></text><text style="" transform="translate( -211.6750030517578, 137.1999979019165)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+void setCPU(CPU&amp; c)</tspan></text></g></g><g class="node default" id="classId-MainMemory-3235" data-node="true" data-id="MainMemory" transform="translate(1609.4121265411377, 1749.5000228881836)"><rect style="" class="outer title-state" x="-134.64922332763672" y="-129.49999809265137" width="269.29844665527344" height="258.99999618530273"/><line class="divider" x1="-134.64922332763672" x2="134.64922332763672" y1="-99.0999984741211" y2="-99.0999984741211"/><line class="divider" x1="-134.64922332763672" x2="134.64922332763672" y1="-38.29999923706055" y2="-38.29999923706055"/><g class="label"><text style=""><tspan xml:space="preserve" dy="1em" x="0" class="title-row"/></text><text style="" class="classTitle" transform="translate( -47.51093673706055, -121.99999809265137)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">MainMemory</tspan></text><text style="" transform="translate( -127.14922332763672, -87.5999984741211)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-int capacity</tspan></text><text style="" transform="translate( -127.14922332763672, -65.19999885559082)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-string technologyType</tspan></text><text style="" transform="translate( -127.14922332763672, -30.799999237060547)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+MainMemory()</tspan></text><text style="" transform="translate( -127.14922332763672, -8.399999618530273)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+MainMemory(int c, string str)</tspan></text><text style="" transform="translate( -127.14922332763672, 14)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+MainMemory(MainMemory&amp; m)</tspan></text><text style="" transform="translate( -127.14922332763672, 36.39999961853027)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+int getCapacity() : const</tspan></text><text style="" transform="translate( -127.14922332763672, 58.79999923706055)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+string getTechnologyType() : const</tspan></text><text style="" transform="translate( -127.14922332763672, 81.19999885559082)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+void setCapacity(int n)</tspan></text><text style="" transform="translate( -127.14922332763672, 103.5999984741211)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+void setTechnologyType(string str)</tspan></text></g></g><g class="node default" id="classId-PhysicalMemory-3236" data-node="true" data-id="PhysicalMemory" transform="translate(2137.21173286438, 1298.9000263214111)"><rect style="" class="outer title-state" x="-143.03125" y="-95.89999866485596" width="286.0625" height="191.7999973297119"/><line class="divider" x1="-143.03125" x2="143.03125" y1="-65.49999904632568" y2="-65.49999904632568"/><line class="divider" x1="-143.03125" x2="143.03125" y1="-27.09999942779541" y2="-27.09999942779541"/><g class="label"><text style=""><tspan xml:space="preserve" dy="1em" x="0" class="title-row"/></text><text style="" class="classTitle" transform="translate( -60.032814025878906, -88.39999866485596)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">PhysicalMemory</tspan></text><text style="" transform="translate( -135.53125, -53.999999046325684)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-int capacity</tspan></text><text style="" transform="translate( -135.53125, -19.59999942779541)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+PhysicalMemory()</tspan></text><text style="" transform="translate( -135.53125, 2.8000001907348633)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+PhysicalMemory(int n)</tspan></text><text style="" transform="translate( -135.53125, 25.199999809265137)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+PhysicalMemory(PhysicalMemory&amp; p)</tspan></text><text style="" transform="translate( -135.53125, 47.59999942779541)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+int getCapacity() : const</tspan></text><text style="" transform="translate( -135.53125, 69.99999904632568)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+void setCapacity(int c)</tspan></text></g></g><g class="node default" id="classId-Port-3237" data-node="true" data-id="Port" transform="translate(1928.608606338501, 1749.5000228881836)"><rect style="" class="outer title-state" x="-106.32500457763672" y="-129.49999809265137" width="212.65000915527344" height="258.99999618530273"/><line class="divider" x1="-106.32500457763672" x2="106.32500457763672" y1="-99.0999984741211" y2="-99.0999984741211"/><line class="divider" x1="-106.32500457763672" x2="106.32500457763672" y1="-38.29999923706055" y2="-38.29999923706055"/><g class="label"><text style=""><tspan xml:space="preserve" dy="1em" x="0" class="title-row"/></text><text style="" class="classTitle" transform="translate( -15.465624809265137, -121.99999809265137)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">Port</tspan></text><text style="" transform="translate( -98.82500457763672, -87.5999984741211)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-int baud_rate</tspan></text><text style="" transform="translate( -98.82500457763672, -65.19999885559082)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-string type</tspan></text><text style="" transform="translate( -98.82500457763672, -30.799999237060547)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+Port()</tspan></text><text style="" transform="translate( -98.82500457763672, -8.399999618530273)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+Port(int c, string str)</tspan></text><text style="" transform="translate( -98.82500457763672, 14)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+Port(Port&amp; p)</tspan></text><text style="" transform="translate( -98.82500457763672, 36.39999961853027)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+int get_BaudRate() : const</tspan></text><text style="" transform="translate( -98.82500457763672, 58.79999923706055)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+string getType() : const</tspan></text><text style="" transform="translate( -98.82500457763672, 81.19999885559082)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+void set_BaudRate(int b)</tspan></text><text style="" transform="translate( -98.82500457763672, 103.5999984741211)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+void setType(string str)</tspan></text></g></g><g class="node default" id="classId-MotherBoard-3238" data-node="true" data-id="MotherBoard" transform="translate(1754.8992328643799, 1298.9000263214111)"><rect style="" class="outer title-state" x="-171.7624969482422" y="-174.2999973297119" width="343.5249938964844" height="348.5999946594238"/><line class="divider" x1="-171.7624969482422" x2="171.7624969482422" y1="-143.89999771118164" y2="-143.89999771118164"/><line class="divider" x1="-171.7624969482422" x2="171.7624969482422" y1="-60.69999885559082" y2="-60.69999885559082"/><g class="label"><text style=""><tspan xml:space="preserve" dy="1em" x="0" class="title-row"/></text><text style="" class="classTitle" transform="translate( -48.431251525878906, -166.7999973297119)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">MotherBoard</tspan></text><text style="" transform="translate( -164.2624969482422, -132.39999771118164)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-MainMemory mm</tspan></text><text style="" transform="translate( -164.2624969482422, -109.99999809265137)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-Port* ports</tspan></text><text style="" transform="translate( -164.2624969482422, -87.5999984741211)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-int noOfPorts</tspan></text><text style="" transform="translate( -164.2624969482422, -53.19999885559082)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+MotherBoard()</tspan></text><text style="" transform="translate( -164.2624969482422, -30.799999237060547)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+MotherBoard(MainMemory&amp; m, Port*p, int n)</tspan></text><text style="" transform="translate( -164.2624969482422, -8.399999618530273)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+MotherBoard(MainMemory&amp; m, int n)</tspan></text><text style="" transform="translate( -164.2624969482422, 14)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+MotherBoard(MotherBoard&amp; Board)</tspan></text><text style="" transform="translate( -164.2624969482422, 36.39999961853027)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+void operator=(MotherBoard&amp; Board)</tspan></text><text style="" transform="translate( -164.2624969482422, 58.79999923706055)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+MainMemory&amp; getMemory()</tspan></text><text style="" transform="translate( -164.2624969482422, 81.19999885559082)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+Port* getPorts() : const</tspan></text><text style="" transform="translate( -164.2624969482422, 103.5999984741211)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+int getNoOfPorts() : const</tspan></text><text style="" transform="translate( -164.2624969482422, 125.99999809265137)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+void setMemory(MainMemory&amp; m)</tspan></text><text style="" transform="translate( -164.2624969482422, 148.39999771118164)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+void setPorts(Port* p, int n)</tspan></text></g></g><g class="node default" id="classId-StorageDevice-3239" data-node="true" data-id="StorageDevice" transform="translate(584.2562561035156, 487.3000087738037)"><rect style="" class="outer title-state" x="-157.40625" y="-163.09999752044678" width="314.8125" height="326.19999504089355"/><line class="divider" x1="-157.40625" x2="157.40625" y1="-132.6999979019165" y2="-132.6999979019165"/><line class="divider" x1="-157.40625" x2="157.40625" y1="-49.499999046325684" y2="-49.499999046325684"/><g class="label"><text style=""><tspan xml:space="preserve" dy="1em" x="0" class="title-row"/></text><text style="" class="classTitle" transform="translate( -53.31953048706055, -155.59999752044678)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">StorageDevice</tspan></text><text style="" transform="translate( -149.90625, -121.1999979019165)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-string type</tspan></text><text style="" transform="translate( -149.90625, -98.79999828338623)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-int capacity</tspan></text><text style="" transform="translate( -149.90625, -76.39999866485596)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-double price</tspan></text><text style="" transform="translate( -149.90625, -41.999999046325684)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+StorageDevice()</tspan></text><text style="" transform="translate( -149.90625, -19.59999942779541)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+StorageDevice(string str, int c, double p)</tspan></text><text style="" transform="translate( -149.90625, 2.8000001907348633)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+StorageDevice(StorageDevice&amp; sd)</tspan></text><text style="" transform="translate( -149.90625, 25.199999809265137)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+string getType() : const</tspan></text><text style="" transform="translate( -149.90625, 47.59999942779541)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+int getCapacity() : const</tspan></text><text style="" transform="translate( -149.90625, 69.99999904632568)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+double getPrice() : const</tspan></text><text style="" transform="translate( -149.90625, 92.39999866485596)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+void setType(string str)</tspan></text><text style="" transform="translate( -149.90625, 114.79999828338623)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+void setCapacity(int n)</tspan></text><text style="" transform="translate( -149.90625, 137.1999979019165)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+void setPrice(double p)</tspan></text></g></g><g class="node default" id="classId-NetworkCard-3240" data-node="true" data-id="NetworkCard" transform="translate(944.1312561035156, 487.3000087738037)"><rect style="" class="outer title-state" x="-152.46875" y="-174.2999973297119" width="304.9375" height="348.5999946594238"/><line class="divider" x1="-152.46875" x2="152.46875" y1="-143.89999771118164" y2="-143.89999771118164"/><line class="divider" x1="-152.46875" x2="152.46875" y1="-60.69999885559082" y2="-60.69999885559082"/><g class="label"><text style=""><tspan xml:space="preserve" dy="1em" x="0" class="title-row"/></text><text style="" class="classTitle" transform="translate( -48.931251525878906, -166.7999973297119)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">NetworkCard</tspan></text><text style="" transform="translate( -144.96875, -132.39999771118164)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-string type</tspan></text><text style="" transform="translate( -144.96875, -109.99999809265137)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-int speed</tspan></text><text style="" transform="translate( -144.96875, -87.5999984741211)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-double price</tspan></text><text style="" transform="translate( -144.96875, -53.19999885559082)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+NetworkCard()</tspan></text><text style="" transform="translate( -144.96875, -30.799999237060547)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+NetworkCard(string str, int s, double p)</tspan></text><text style="" transform="translate( -144.96875, -8.399999618530273)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+NetworkCard(NetworkCard&amp; c)</tspan></text><text style="" transform="translate( -144.96875, 14)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+void operator=(NetworkCard&amp; c)</tspan></text><text style="" transform="translate( -144.96875, 36.39999961853027)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+string getType() : const</tspan></text><text style="" transform="translate( -144.96875, 58.79999923706055)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+int getSpeed() : const</tspan></text><text style="" transform="translate( -144.96875, 81.19999885559082)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+double getPrice() : const</tspan></text><text style="" transform="translate( -144.96875, 103.5999984741211)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+void setType(string str)</tspan></text><text style="" transform="translate( -144.96875, 125.99999809265137)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+void setSpeed(int n)</tspan></text><text style="" transform="translate( -144.96875, 148.39999771118164)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+void setPrice(double d)</tspan></text></g></g><g class="node default" id="classId-PowerSupply-3241" data-node="true" data-id="PowerSupply" transform="translate(1297.5500030517578, 487.3000087738037)"><rect style="" class="outer title-state" x="-150.9499969482422" y="-163.09999752044678" width="301.8999938964844" height="326.19999504089355"/><line class="divider" x1="-150.9499969482422" x2="150.9499969482422" y1="-132.6999979019165" y2="-132.6999979019165"/><line class="divider" x1="-150.9499969482422" x2="150.9499969482422" y1="-49.499999046325684" y2="-49.499999046325684"/><g class="label"><text style=""><tspan xml:space="preserve" dy="1em" x="0" class="title-row"/></text><text style="" class="classTitle" transform="translate( -48.028907775878906, -155.59999752044678)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">PowerSupply</tspan></text><text style="" transform="translate( -143.4499969482422, -121.1999979019165)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-int wattage</tspan></text><text style="" transform="translate( -143.4499969482422, -98.79999828338623)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-string efficiencyRate</tspan></text><text style="" transform="translate( -143.4499969482422, -76.39999866485596)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-double price</tspan></text><text style="" transform="translate( -143.4499969482422, -41.999999046325684)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+PowerSupply()</tspan></text><text style="" transform="translate( -143.4499969482422, -19.59999942779541)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+PowerSupply(int w, string er, double p)</tspan></text><text style="" transform="translate( -143.4499969482422, 2.8000001907348633)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+PowerSupply(PowerSupply&amp; pow)</tspan></text><text style="" transform="translate( -143.4499969482422, 25.199999809265137)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+int getWattage() : const</tspan></text><text style="" transform="translate( -143.4499969482422, 47.59999942779541)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+string getEfficiencyRate() : const</tspan></text><text style="" transform="translate( -143.4499969482422, 69.99999904632568)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+double getPrice() : const</tspan></text><text style="" transform="translate( -143.4499969482422, 92.39999866485596)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+void setWattage(int w)</tspan></text><text style="" transform="translate( -143.4499969482422, 114.79999828338623)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+void setEfficiencyRate(string er)</tspan></text><text style="" transform="translate( -143.4499969482422, 137.1999979019165)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+void setPrice(double p)</tspan></text></g></g><g class="node default" id="classId-Battery-3242" data-node="true" data-id="Battery" transform="translate(1625.7640686035156, 487.3000087738037)"><rect style="" class="outer title-state" x="-99.18437957763672" y="-95.89999866485596" width="198.36875915527344" height="191.7999973297119"/><line class="divider" x1="-99.18437957763672" x2="99.18437957763672" y1="-65.49999904632568" y2="-65.49999904632568"/><line class="divider" x1="-99.18437957763672" x2="99.18437957763672" y1="-27.09999942779541" y2="-27.09999942779541"/><g class="label"><text style=""><tspan xml:space="preserve" dy="1em" x="0" class="title-row"/></text><text style="" class="classTitle" transform="translate( -27.782812118530273, -88.39999866485596)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">Battery</tspan></text><text style="" transform="translate( -91.68437957763672, -53.999999046325684)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-int Capacity</tspan></text><text style="" transform="translate( -91.68437957763672, -19.59999942779541)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+Battery()</tspan></text><text style="" transform="translate( -91.68437957763672, 2.8000001907348633)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+Battery(int c)</tspan></text><text style="" transform="translate( -91.68437957763672, 25.199999809265137)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+Battery(Battery&amp; b)</tspan></text><text style="" transform="translate( -91.68437957763672, 47.59999942779541)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+int getCapacity() : const</tspan></text><text style="" transform="translate( -91.68437957763672, 69.99999904632568)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+void setCapacity(int c)</tspan></text></g></g><g class="node default" id="classId-Case-3243" data-node="true" data-id="Case" transform="translate(1909.0734481811523, 487.3000087738037)"><rect style="" class="outer title-state" x="-134.125" y="-129.49999809265137" width="268.25" height="258.99999618530273"/><line class="divider" x1="-134.125" x2="134.125" y1="-99.0999984741211" y2="-99.0999984741211"/><line class="divider" x1="-134.125" x2="134.125" y1="-38.29999923706055" y2="-38.29999923706055"/><g class="label"><text style=""><tspan xml:space="preserve" dy="1em" x="0" class="title-row"/></text><text style="" class="classTitle" transform="translate( -17.40156364440918, -121.99999809265137)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">Case</tspan></text><text style="" transform="translate( -126.625, -87.5999984741211)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-string formFactor</tspan></text><text style="" transform="translate( -126.625, -65.19999885559082)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-string color</tspan></text><text style="" transform="translate( -126.625, -30.799999237060547)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+Case()</tspan></text><text style="" transform="translate( -126.625, -8.399999618530273)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+Case(string f = "\0", string c = "\0")</tspan></text><text style="" transform="translate( -126.625, 14)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+Case(Case&amp; c)</tspan></text><text style="" transform="translate( -126.625, 36.39999961853027)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+string getFormFactor() : const</tspan></text><text style="" transform="translate( -126.625, 58.79999923706055)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+string getColor() : const</tspan></text><text style="" transform="translate( -126.625, 81.19999885559082)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+void setFormFactor(string str)</tspan></text><text style="" transform="translate( -126.625, 103.5999984741211)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+void setColor(string str)</tspan></text></g></g><g class="node default" id="classId-ComputerAssembly-3244" data-node="true" data-id="ComputerAssembly" transform="translate(2211.3281326293945, 487.3000087738037)"><rect style="" class="outer title-state" x="-118.12969207763672" y="-95.89999866485596" width="236.25938415527344" height="191.7999973297119"/><line class="divider" x1="-118.12969207763672" x2="118.12969207763672" y1="-65.49999904632568" y2="-65.49999904632568"/><line class="divider" x1="-118.12969207763672" x2="118.12969207763672" y1="-4.699999809265137" y2="-4.699999809265137"/><g class="label"><text style=""><tspan xml:space="preserve" dy="1em" x="0" class="title-row"/></text><text style="" class="classTitle" transform="translate( -71.7125015258789, -88.39999866485596)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">ComputerAssembly</tspan></text><text style="" transform="translate( -110.62969207763672, -53.999999046325684)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+string details</tspan></text><text style="" transform="translate( -110.62969207763672, -31.59999942779541)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+double totalPrice</tspan></text><text style="" transform="translate( -110.62969207763672, 2.8000001907348633)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+ComputerAssembly()</tspan></text><text style="" transform="translate( -110.62969207763672, 25.199999809265137)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+double getTotalPrice() : const</tspan></text><text style="" transform="translate( -110.62969207763672, 47.59999942779541)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+string getDetails() : const</tspan></text><text style="" transform="translate( -110.62969207763672, 69.99999904632568)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+void setTotalPrice(double p)</tspan></text></g></g><g class="node default" id="classId-PCAssembly-3245" data-node="true" data-id="PCAssembly" transform="translate(1097.3304767608643, 126.30000305175781)"><rect style="" class="outer title-state" x="-98.13750457763672" y="-118.29999828338623" width="196.27500915527344" height="236.59999656677246"/><line class="divider" x1="-98.13750457763672" x2="98.13750457763672" y1="-87.89999866485596" y2="-87.89999866485596"/><line class="divider" x1="-98.13750457763672" x2="98.13750457763672" y1="62.499999046325684" y2="62.499999046325684"/><g class="label"><text style=""><tspan xml:space="preserve" dy="1em" x="0" class="title-row"/></text><text style="" class="classTitle" transform="translate( -44.431251525878906, -110.79999828338623)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">PCAssembly</tspan></text><text style="" transform="translate( -90.63750457763672, -76.39999866485596)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-Case* body</tspan></text><text style="" transform="translate( -90.63750457763672, -53.999999046325684)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-GraphicsCard* gpu</tspan></text><text style="" transform="translate( -90.63750457763672, -31.59999942779541)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-StorageDevice* drive</tspan></text><text style="" transform="translate( -90.63750457763672, -9.199999809265137)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-NetworkCard* net</tspan></text><text style="" transform="translate( -90.63750457763672, 13.199999809265137)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-PowerSupply* pow</tspan></text><text style="" transform="translate( -90.63750457763672, 35.59999942779541)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-Battery* bat</tspan></text><text style="" transform="translate( -90.63750457763672, 69.99999904632568)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+PCAssembly()</tspan></text><text style="" transform="translate( -90.63750457763672, 92.39999866485596)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+bool AssemblePC(int ch)</tspan></text></g></g><g class="node default" id="classId-MACAssembly-3246" data-node="true" data-id="MACAssembly" transform="translate(1349.536729812622, 126.30000305175781)"><rect style="" class="outer title-state" x="-104.0687484741211" y="-118.29999828338623" width="208.1374969482422" height="236.59999656677246"/><line class="divider" x1="-104.0687484741211" x2="104.0687484741211" y1="-87.89999866485596" y2="-87.89999866485596"/><line class="divider" x1="-104.0687484741211" x2="104.0687484741211" y1="62.499999046325684" y2="62.499999046325684"/><g class="label"><text style=""><tspan xml:space="preserve" dy="1em" x="0" class="title-row"/></text><text style="" class="classTitle" transform="translate( -51.16328048706055, -110.79999828338623)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">MACAssembly</tspan></text><text style="" transform="translate( -96.5687484741211, -76.39999866485596)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-Case* body</tspan></text><text style="" transform="translate( -96.5687484741211, -53.999999046325684)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-GraphicsCard* gpu</tspan></text><text style="" transform="translate( -96.5687484741211, -31.59999942779541)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-StorageDevice* drive</tspan></text><text style="" transform="translate( -96.5687484741211, -9.199999809265137)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-NetworkCard* net</tspan></text><text style="" transform="translate( -96.5687484741211, 13.199999809265137)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-PowerSupply* pow</tspan></text><text style="" transform="translate( -96.5687484741211, 35.59999942779541)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">-Battery* bat</tspan></text><text style="" transform="translate( -96.5687484741211, 69.99999904632568)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+MACAssembly()</tspan></text><text style="" transform="translate( -96.5687484741211, 92.39999866485596)"><tspan xml:space="preserve" dy="1em" x="0" class="title-row">+bool AssembleMAC(int ch)</tspan></text></g></g></g></g></g></svg>